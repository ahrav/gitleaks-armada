openapi: '3.0.3'
info:
  title: API Specification for Gitleaks Armada
  version: '1.0'
servers:
  - url: https://api.server.test/v1 # TODO: change to the actual URL
paths:
  /v1/scan:
    post:
      summary: Start a new scan operation
      operationId: startScan
      tags:
        - Scanning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequest'
      responses:
        '202':
          description: Scan started request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/scan/{jobId}/pause:
    post:
      summary: Pause a running scan job
      operationId: pauseScan
      tags:
        - Scanning
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the scan job to pause
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseRequest'
      responses:
        '202':
          description: Pause request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PauseResponse'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ScanRequest:
      type: object
      required:
        - targets
      properties:
        name:
          type: string
          description: Optional, user-friendly name for the scan.
        targets:
          type: array
          description: List of targets to scan.
          items:
            $ref: '#/components/schemas/TargetRequest'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional metadata for the scan.
    TargetRequest:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [github, s3, url]
          description: The type of scan target.
        source_auth:
          $ref: '#/components/schemas/SourceAuth'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional metadata for the target.
        # GitHub-specific properties
        organization:
          type: string
          description: GitHub organization name.
        repositories:
          type: array
          description: List of repository URLs.
          items:
            type: string
            format: uri
          minItems: 1
        repository_pattern:
          type: string
          description: Regex pattern to select repositories (mutually exclusive with repositories).
        # S3-specific properties
        bucket:
          type: string
          description: S3 bucket name.
        prefix:
          type: string
          description: S3 bucket prefix.
        region:
          type: string
          description: S3 bucket region.
        # URL-specific properties
        urls:
          type: array
          description: List of URLs to scan.
          items:
            type: string
            format: uri
          minItems: 1
        archive_format:
          type: string
          enum: [none, gzip, tar.gz, zip, warc.gz, auto]
          default: none
          description: Format of the archive (if applicable).
        rate_limit:
          type: number
          format: float
          minimum: 0
          description: Rate limit for URL scanning.
        headers:
          type: object
          additionalProperties:
            type: string
          description: Headers to include when accessing URLs.
    RetryConfig:
      type: object
      properties:
        max_attempts:
          type: integer
          description: Maximum number of retry attempts
        initial_wait:
          type: string
          format: duration
          description: Initial wait time between retries
        max_wait:
          type: string
          format: duration
          description: Maximum wait time between retries
    ScanResponse:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the scan job
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          enum: [QUEUED]
          description: Current status of the scan job
          example: "QUEUED"
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        status: "QUEUED"
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - invalid_argument
            - internal
          description: Error code identifying the type of error
        message:
          type: string
          description: Human-readable error message
    SourceAuth:
      type: object
      description: Authentication configuration for the source.
      required:
        - type
      properties:
        type:
          type: string
          enum: [none, basic, token, oauth, aws]
          description: Type of authentication.
          example: "token"
        credentials:
          type: object
          additionalProperties: true
          description: Authentication credentials specific to the auth type.
    PauseRequest:
      type: object
      properties:
        reason:
          type: string
          description: Optional reason for pausing the scan
    PauseResponse:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the paused job
        status:
          type: string
          enum: [PAUSING]
          description: The new status of the job
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        status: "PAUSING"
