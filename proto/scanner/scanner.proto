syntax = "proto3";

package scanner;

option go_package = "github.com/ahrav/gitleaks-armada/proto/scanner;scanner";

message ScanTask {
  string task_id = 1;
  SourceType source_type = 2; // SOURCE_TYPE_GITHUB
  string resource_uri = 3;    // e.g., "git://github.com/org/repo"
  map<string, string> metadata = 4;
  TaskCredentials credentials = 5;
}

enum SourceType {
  SOURCE_TYPE_UNSPECIFIED = 0;
  SOURCE_TYPE_GITHUB = 1;
  SOURCE_TYPE_S3 = 2;
}

message ScanProgress {
  string task_id = 1;         // Matches the ScanTask task_id
  float percent_complete = 2; // 0.0 to 100.0
  // Optional: describe what is being scanned now (e.g., current file)
  string current_item = 3;
  // Optional: how many items (files/commits) processed so far
  int64 items_processed = 4;
  int64 total_items = 5;            // Optional: total items if known
  map<string, string> metadata = 6; // Additional data as needed
}

message ScanResult {
  string task_id = 1;
  repeated Finding findings = 2;
  ScanStatus status = 3;
  string error = 4; // populated if status is ERROR
}

message Finding {
  // Generic location identifier (could be file path, URL, etc.)
  string location = 1;
  int32 line_number = 2;
  string secret_type = 3;
  string match = 4;
  float confidence = 5;
}

enum ScanStatus {
  SCAN_STATUS_UNSPECIFIED = 0;
  SCAN_STATUS_SUCCESS = 1;
  SCAN_STATUS_ERROR = 2;
}

message TaskCredentials {
  oneof auth {
    UnauthenticatedCredentials unauthenticated = 1;
    GitHubCredentials github = 2;
    S3Credentials s3 = 3;
    // Add more credential types as needed
  }
}

message UnauthenticatedCredentials {}

message GitHubCredentials { string auth_token = 1; }

message S3Credentials {
  string access_key = 1;
  string secret_key = 2;
  string session_token = 3; // Optional for temporary credentials
}
