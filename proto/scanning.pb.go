// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.0
// source: proto/scanning.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScanJobStatus int32

const (
	ScanJobStatus_SCAN_JOB_STATUS_UNSPECIFIED ScanJobStatus = 0
	ScanJobStatus_SCAN_JOB_STATUS_QUEUED      ScanJobStatus = 1
	ScanJobStatus_SCAN_JOB_STATUS_ENUMERATING ScanJobStatus = 2
	ScanJobStatus_SCAN_JOB_STATUS_RUNNING     ScanJobStatus = 3
	ScanJobStatus_SCAN_JOB_STATUS_PAUSING     ScanJobStatus = 4
	ScanJobStatus_SCAN_JOB_STATUS_PAUSED      ScanJobStatus = 5
	ScanJobStatus_SCAN_JOB_STATUS_COMPLETED   ScanJobStatus = 6
	ScanJobStatus_SCAN_JOB_STATUS_CANCELLING  ScanJobStatus = 7
	ScanJobStatus_SCAN_JOB_STATUS_CANCELLED   ScanJobStatus = 8
	ScanJobStatus_SCAN_JOB_STATUS_FAILED      ScanJobStatus = 9
)

// Enum value maps for ScanJobStatus.
var (
	ScanJobStatus_name = map[int32]string{
		0: "SCAN_JOB_STATUS_UNSPECIFIED",
		1: "SCAN_JOB_STATUS_QUEUED",
		2: "SCAN_JOB_STATUS_ENUMERATING",
		3: "SCAN_JOB_STATUS_RUNNING",
		4: "SCAN_JOB_STATUS_PAUSING",
		5: "SCAN_JOB_STATUS_PAUSED",
		6: "SCAN_JOB_STATUS_COMPLETED",
		7: "SCAN_JOB_STATUS_CANCELLING",
		8: "SCAN_JOB_STATUS_CANCELLED",
		9: "SCAN_JOB_STATUS_FAILED",
	}
	ScanJobStatus_value = map[string]int32{
		"SCAN_JOB_STATUS_UNSPECIFIED": 0,
		"SCAN_JOB_STATUS_QUEUED":      1,
		"SCAN_JOB_STATUS_ENUMERATING": 2,
		"SCAN_JOB_STATUS_RUNNING":     3,
		"SCAN_JOB_STATUS_PAUSING":     4,
		"SCAN_JOB_STATUS_PAUSED":      5,
		"SCAN_JOB_STATUS_COMPLETED":   6,
		"SCAN_JOB_STATUS_CANCELLING":  7,
		"SCAN_JOB_STATUS_CANCELLED":   8,
		"SCAN_JOB_STATUS_FAILED":      9,
	}
)

func (x ScanJobStatus) Enum() *ScanJobStatus {
	p := new(ScanJobStatus)
	*p = x
	return p
}

func (x ScanJobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScanJobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scanning_proto_enumTypes[0].Descriptor()
}

func (ScanJobStatus) Type() protoreflect.EnumType {
	return &file_proto_scanning_proto_enumTypes[0]
}

func (x ScanJobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScanJobStatus.Descriptor instead.
func (ScanJobStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{0}
}

type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_IN_PROGRESS TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4
	TaskStatus_TASK_STATUS_STALE       TaskStatus = 5
	TaskStatus_TASK_STATUS_PAUSED      TaskStatus = 6
	TaskStatus_TASK_STATUS_CANCELLED   TaskStatus = 7
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_IN_PROGRESS",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_STALE",
		6: "TASK_STATUS_PAUSED",
		7: "TASK_STATUS_CANCELLED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_IN_PROGRESS": 2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_STALE":       5,
		"TASK_STATUS_PAUSED":      6,
		"TASK_STATUS_CANCELLED":   7,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scanning_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_proto_scanning_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{1}
}

// ScannerStatus represents the possible states of a scanner in the system.
type ScannerStatus int32

const (
	ScannerStatus_SCANNER_STATUS_UNSPECIFIED ScannerStatus = 0
	ScannerStatus_SCANNER_STATUS_ONLINE      ScannerStatus = 1 // Scanner is connected and ready to accept tasks
	ScannerStatus_SCANNER_STATUS_OFFLINE     ScannerStatus = 2 // Scanner is not connected or has timed out
	ScannerStatus_SCANNER_STATUS_MAINTENANCE ScannerStatus = 3 // Scanner is online but not accepting tasks (maintenance mode)
	ScannerStatus_SCANNER_STATUS_ERROR       ScannerStatus = 4 // Scanner is in an error state
)

// Enum value maps for ScannerStatus.
var (
	ScannerStatus_name = map[int32]string{
		0: "SCANNER_STATUS_UNSPECIFIED",
		1: "SCANNER_STATUS_ONLINE",
		2: "SCANNER_STATUS_OFFLINE",
		3: "SCANNER_STATUS_MAINTENANCE",
		4: "SCANNER_STATUS_ERROR",
	}
	ScannerStatus_value = map[string]int32{
		"SCANNER_STATUS_UNSPECIFIED": 0,
		"SCANNER_STATUS_ONLINE":      1,
		"SCANNER_STATUS_OFFLINE":     2,
		"SCANNER_STATUS_MAINTENANCE": 3,
		"SCANNER_STATUS_ERROR":       4,
	}
)

func (x ScannerStatus) Enum() *ScannerStatus {
	p := new(ScannerStatus)
	*p = x
	return p
}

func (x ScannerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScannerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scanning_proto_enumTypes[2].Descriptor()
}

func (ScannerStatus) Type() protoreflect.EnumType {
	return &file_proto_scanning_proto_enumTypes[2]
}

func (x ScannerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScannerStatus.Descriptor instead.
func (ScannerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{2}
}

// The final outcome of a scan, containing all discovered findings, status, etc.
type ScanResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ties back to the ScanTask this result belongs to.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// All secrets or matches found during this scan.
	Findings []*Finding `protobuf:"bytes,2,rep,name=findings,proto3" json:"findings,omitempty"`
	// Status of this job, matching your DB enum.
	Status ScanJobStatus `protobuf:"varint,3,opt,name=status,proto3,enum=scanner.ScanJobStatus" json:"status,omitempty"`
	// If status == SCAN_JOB_STATUS_FAILED, short error info here.
	Error string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{0}
}

func (x *ScanResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ScanResult) GetFindings() []*Finding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *ScanResult) GetStatus() ScanJobStatus {
	if x != nil {
		return x.Status
	}
	return ScanJobStatus_SCAN_JOB_STATUS_UNSPECIFIED
}

func (x *ScanResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// A single discovered secret or match, typically stored in your DB 'findings'
// table.
type Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique key for deduplication (e.g., hash of path + secret).
	Fingerprint string `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	// The path or location of the found secret (universal).
	FilePath string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	// Line number if relevant (e.g., scanning code).
	LineNumber int32 `protobuf:"varint,3,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	// Entire line of text, if captured. (Optional but convenient.)
	Line string `protobuf:"bytes,4,opt,name=line,proto3" json:"line,omitempty"`
	// The actual match that was found.
	Match string `protobuf:"bytes,5,opt,name=match,proto3" json:"match,omitempty"`
	// The author's email address.
	AuthorEmail string `protobuf:"bytes,6,opt,name=author_email,json=authorEmail,proto3" json:"author_email,omitempty"`
	// For ephemeral or extended data: commit hash, message, etc.
	RawFinding *structpb.Struct `protobuf:"bytes,7,opt,name=raw_finding,json=rawFinding,proto3" json:"raw_finding,omitempty"`
}

func (x *Finding) Reset() {
	*x = Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{1}
}

func (x *Finding) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Finding) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Finding) GetLineNumber() int32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *Finding) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *Finding) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *Finding) GetAuthorEmail() string {
	if x != nil {
		return x.AuthorEmail
	}
	return ""
}

func (x *Finding) GetRawFinding() *structpb.Struct {
	if x != nil {
		return x.RawFinding
	}
	return nil
}

// JobRequestedEvent represents a request to create a new scan job.
type JobRequestedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string        `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	OccurredAt  int64         `protobuf:"varint,2,opt,name=occurred_at,json=occurredAt,proto3" json:"occurred_at,omitempty"`
	Targets     []*TargetSpec `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	RequestedBy string        `protobuf:"bytes,4,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *JobRequestedEvent) Reset() {
	*x = JobRequestedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRequestedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRequestedEvent) ProtoMessage() {}

func (x *JobRequestedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRequestedEvent.ProtoReflect.Descriptor instead.
func (*JobRequestedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{2}
}

func (x *JobRequestedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobRequestedEvent) GetOccurredAt() int64 {
	if x != nil {
		return x.OccurredAt
	}
	return 0
}

func (x *JobRequestedEvent) GetTargets() []*TargetSpec {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *JobRequestedEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// JobCreatedEvent represents the creation of a new scan job.
type JobCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId      string      `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp  int64       `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TargetSpec *TargetSpec `protobuf:"bytes,3,opt,name=target_spec,json=targetSpec,proto3" json:"target_spec,omitempty"`
}

func (x *JobCreatedEvent) Reset() {
	*x = JobCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreatedEvent) ProtoMessage() {}

func (x *JobCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreatedEvent.ProtoReflect.Descriptor instead.
func (*JobCreatedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{3}
}

func (x *JobCreatedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobCreatedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobCreatedEvent) GetTargetSpec() *TargetSpec {
	if x != nil {
		return x.TargetSpec
	}
	return nil
}

// JobEnumerationCompletedEvent signals that all targets for a job have been
// enumerated.
type JobEnumerationCompletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId      string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp  int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TotalTasks int32  `protobuf:"varint,3,opt,name=total_tasks,json=totalTasks,proto3" json:"total_tasks,omitempty"`
}

func (x *JobEnumerationCompletedEvent) Reset() {
	*x = JobEnumerationCompletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEnumerationCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEnumerationCompletedEvent) ProtoMessage() {}

func (x *JobEnumerationCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEnumerationCompletedEvent.ProtoReflect.Descriptor instead.
func (*JobEnumerationCompletedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{4}
}

func (x *JobEnumerationCompletedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobEnumerationCompletedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobEnumerationCompletedEvent) GetTotalTasks() int32 {
	if x != nil {
		return x.TotalTasks
	}
	return 0
}

// JobPausingEvent signals that a job is in the process of being paused.
type JobPausingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp   int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestedBy string `protobuf:"bytes,3,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *JobPausingEvent) Reset() {
	*x = JobPausingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPausingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPausingEvent) ProtoMessage() {}

func (x *JobPausingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPausingEvent.ProtoReflect.Descriptor instead.
func (*JobPausingEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{5}
}

func (x *JobPausingEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobPausingEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobPausingEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// JobPausedEvent signals that a job has been successfully paused.
type JobPausedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp   int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PausedAt    int64  `protobuf:"varint,3,opt,name=paused_at,json=pausedAt,proto3" json:"paused_at,omitempty"`
	Reason      string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	RequestedBy string `protobuf:"bytes,5,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *JobPausedEvent) Reset() {
	*x = JobPausedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPausedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPausedEvent) ProtoMessage() {}

func (x *JobPausedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPausedEvent.ProtoReflect.Descriptor instead.
func (*JobPausedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{6}
}

func (x *JobPausedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobPausedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobPausedEvent) GetPausedAt() int64 {
	if x != nil {
		return x.PausedAt
	}
	return 0
}

func (x *JobPausedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *JobPausedEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// JobResumingEvent signals that a job is in the process of being resumed.
type JobResumingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp   int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestedBy string `protobuf:"bytes,3,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *JobResumingEvent) Reset() {
	*x = JobResumingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResumingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResumingEvent) ProtoMessage() {}

func (x *JobResumingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResumingEvent.ProtoReflect.Descriptor instead.
func (*JobResumingEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{7}
}

func (x *JobResumingEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobResumingEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobResumingEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// JobCancellingEvent signals that a job is in the process of being cancelled.
type JobCancellingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp   int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestedBy string `protobuf:"bytes,3,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *JobCancellingEvent) Reset() {
	*x = JobCancellingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCancellingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCancellingEvent) ProtoMessage() {}

func (x *JobCancellingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCancellingEvent.ProtoReflect.Descriptor instead.
func (*JobCancellingEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{8}
}

func (x *JobCancellingEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobCancellingEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobCancellingEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// JobCancelledEvent signals that a job has been successfully cancelled.
type JobCancelledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp   int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CancelledAt int64  `protobuf:"varint,3,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	Reason      string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	RequestedBy string `protobuf:"bytes,5,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
}

func (x *JobCancelledEvent) Reset() {
	*x = JobCancelledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCancelledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCancelledEvent) ProtoMessage() {}

func (x *JobCancelledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCancelledEvent.ProtoReflect.Descriptor instead.
func (*JobCancelledEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{9}
}

func (x *JobCancelledEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobCancelledEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobCancelledEvent) GetCancelledAt() int64 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

func (x *JobCancelledEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *JobCancelledEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// TaskCreatedEvent represents a new task discovered for scanning.
type TaskCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string            `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId      string            `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SourceType  SourceType        `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3,enum=shared.SourceType" json:"source_type,omitempty"`
	ResourceUri string            `protobuf:"bytes,4,opt,name=resource_uri,json=resourceUri,proto3" json:"resource_uri,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Auth        *Auth             `protobuf:"bytes,6,opt,name=auth,proto3" json:"auth,omitempty"`
	Timestamp   int64             `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TaskCreatedEvent) Reset() {
	*x = TaskCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreatedEvent) ProtoMessage() {}

func (x *TaskCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreatedEvent.ProtoReflect.Descriptor instead.
func (*TaskCreatedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{10}
}

func (x *TaskCreatedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskCreatedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCreatedEvent) GetSourceType() SourceType {
	if x != nil {
		return x.SourceType
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *TaskCreatedEvent) GetResourceUri() string {
	if x != nil {
		return x.ResourceUri
	}
	return ""
}

func (x *TaskCreatedEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskCreatedEvent) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *TaskCreatedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TaskStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId      string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ResourceUri string `protobuf:"bytes,3,opt,name=resource_uri,json=resourceUri,proto3" json:"resource_uri,omitempty"`
	Timestamp   int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in nanoseconds
}

func (x *TaskStartedEvent) Reset() {
	*x = TaskStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStartedEvent) ProtoMessage() {}

func (x *TaskStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskStartedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{11}
}

func (x *TaskStartedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskStartedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStartedEvent) GetResourceUri() string {
	if x != nil {
		return x.ResourceUri
	}
	return ""
}

func (x *TaskStartedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TaskProgressedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId          string      `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	JobId           string      `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SequenceNum     int64       `protobuf:"varint,3,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Timestamp       int64       `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ItemsProcessed  int64       `protobuf:"varint,5,opt,name=items_processed,json=itemsProcessed,proto3" json:"items_processed,omitempty"`
	ErrorCount      int32       `protobuf:"varint,6,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Message         string      `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	ProgressDetails []byte      `protobuf:"bytes,8,opt,name=progress_details,json=progressDetails,proto3" json:"progress_details,omitempty"`
	Checkpoint      *Checkpoint `protobuf:"bytes,9,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *TaskProgressedEvent) Reset() {
	*x = TaskProgressedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskProgressedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgressedEvent) ProtoMessage() {}

func (x *TaskProgressedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgressedEvent.ProtoReflect.Descriptor instead.
func (*TaskProgressedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{12}
}

func (x *TaskProgressedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskProgressedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskProgressedEvent) GetSequenceNum() int64 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

func (x *TaskProgressedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TaskProgressedEvent) GetItemsProcessed() int64 {
	if x != nil {
		return x.ItemsProcessed
	}
	return 0
}

func (x *TaskProgressedEvent) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *TaskProgressedEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskProgressedEvent) GetProgressDetails() []byte {
	if x != nil {
		return x.ProgressDetails
	}
	return nil
}

func (x *TaskProgressedEvent) GetCheckpoint() *Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      string            `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Timestamp   int64             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ResumeToken []byte            `protobuf:"bytes,3,opt,name=resume_token,json=resumeToken,proto3" json:"resume_token,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{13}
}

func (x *Checkpoint) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Checkpoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Checkpoint) GetResumeToken() []byte {
	if x != nil {
		return x.ResumeToken
	}
	return nil
}

func (x *Checkpoint) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TaskCompletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId    string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TaskCompletedEvent) Reset() {
	*x = TaskCompletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedEvent) ProtoMessage() {}

func (x *TaskCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedEvent.ProtoReflect.Descriptor instead.
func (*TaskCompletedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{14}
}

func (x *TaskCompletedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskCompletedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCompletedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TaskFailedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId    string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reason    string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *TaskFailedEvent) Reset() {
	*x = TaskFailedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFailedEvent) ProtoMessage() {}

func (x *TaskFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFailedEvent.ProtoReflect.Descriptor instead.
func (*TaskFailedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{15}
}

func (x *TaskFailedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskFailedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskFailedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TaskFailedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TaskHeartbeatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TaskHeartbeatEvent) Reset() {
	*x = TaskHeartbeatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskHeartbeatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskHeartbeatEvent) ProtoMessage() {}

func (x *TaskHeartbeatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskHeartbeatEvent.ProtoReflect.Descriptor instead.
func (*TaskHeartbeatEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{16}
}

func (x *TaskHeartbeatEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskHeartbeatEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TaskResumeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string      `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId      string      `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SourceType  SourceType  `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3,enum=shared.SourceType" json:"source_type,omitempty"`
	Timestamp   int64       `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ResourceUri string      `protobuf:"bytes,5,opt,name=resource_uri,json=resourceUri,proto3" json:"resource_uri,omitempty"`
	SequenceNum int64       `protobuf:"varint,6,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Checkpoint  *Checkpoint `protobuf:"bytes,7,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Auth        *Auth       `protobuf:"bytes,8,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *TaskResumeEvent) Reset() {
	*x = TaskResumeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResumeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResumeEvent) ProtoMessage() {}

func (x *TaskResumeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResumeEvent.ProtoReflect.Descriptor instead.
func (*TaskResumeEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{17}
}

func (x *TaskResumeEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskResumeEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResumeEvent) GetSourceType() SourceType {
	if x != nil {
		return x.SourceType
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *TaskResumeEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TaskResumeEvent) GetResourceUri() string {
	if x != nil {
		return x.ResourceUri
	}
	return ""
}

func (x *TaskResumeEvent) GetSequenceNum() int64 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

func (x *TaskResumeEvent) GetCheckpoint() *Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *TaskResumeEvent) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type TaskJobMetricEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string     `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId    string     `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status    TaskStatus `protobuf:"varint,3,opt,name=status,proto3,enum=scanner.TaskStatus" json:"status,omitempty"`
	Timestamp int64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TaskJobMetricEvent) Reset() {
	*x = TaskJobMetricEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskJobMetricEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskJobMetricEvent) ProtoMessage() {}

func (x *TaskJobMetricEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskJobMetricEvent.ProtoReflect.Descriptor instead.
func (*TaskJobMetricEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{18}
}

func (x *TaskJobMetricEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskJobMetricEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskJobMetricEvent) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskJobMetricEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TaskPausedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string               `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId      string               `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Timestamp   int64                `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestedBy string               `protobuf:"bytes,4,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	Progress    *TaskProgressedEvent `protobuf:"bytes,5,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *TaskPausedEvent) Reset() {
	*x = TaskPausedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPausedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPausedEvent) ProtoMessage() {}

func (x *TaskPausedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPausedEvent.ProtoReflect.Descriptor instead.
func (*TaskPausedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{19}
}

func (x *TaskPausedEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskPausedEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskPausedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TaskPausedEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

func (x *TaskPausedEvent) GetProgress() *TaskProgressedEvent {
	if x != nil {
		return x.Progress
	}
	return nil
}

type TaskCancelledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId      string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Timestamp   int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestedBy string `protobuf:"bytes,4,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	CancelledAt int64  `protobuf:"varint,5,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
}

func (x *TaskCancelledEvent) Reset() {
	*x = TaskCancelledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCancelledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCancelledEvent) ProtoMessage() {}

func (x *TaskCancelledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCancelledEvent.ProtoReflect.Descriptor instead.
func (*TaskCancelledEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{20}
}

func (x *TaskCancelledEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *TaskCancelledEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCancelledEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TaskCancelledEvent) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

func (x *TaskCancelledEvent) GetCancelledAt() int64 {
	if x != nil {
		return x.CancelledAt
	}
	return 0
}

// ScannerRegisteredEvent is emitted when a scanner registers with the system.
type ScannerRegisteredEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerName   string            `protobuf:"bytes,1,opt,name=scanner_name,json=scannerName,proto3" json:"scanner_name,omitempty"`
	Version       string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Capabilities  []string          `protobuf:"bytes,3,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	GroupName     string            `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` // Optional: if not provided, assigned to default group
	Hostname      string            `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress     string            `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Timestamp     int64             `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in nanoseconds
	Tags          map[string]string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InitialStatus ScannerStatus     `protobuf:"varint,9,opt,name=initial_status,json=initialStatus,proto3,enum=scanner.ScannerStatus" json:"initial_status,omitempty"` // Initial status of the scanner
}

func (x *ScannerRegisteredEvent) Reset() {
	*x = ScannerRegisteredEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannerRegisteredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerRegisteredEvent) ProtoMessage() {}

func (x *ScannerRegisteredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerRegisteredEvent.ProtoReflect.Descriptor instead.
func (*ScannerRegisteredEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{21}
}

func (x *ScannerRegisteredEvent) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

func (x *ScannerRegisteredEvent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ScannerRegisteredEvent) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ScannerRegisteredEvent) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ScannerRegisteredEvent) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ScannerRegisteredEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ScannerRegisteredEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ScannerRegisteredEvent) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ScannerRegisteredEvent) GetInitialStatus() ScannerStatus {
	if x != nil {
		return x.InitialStatus
	}
	return ScannerStatus_SCANNER_STATUS_UNSPECIFIED
}

// ScannerHeartbeatEvent is emitted periodically by scanners to indicate they're
// still alive.
type ScannerHeartbeatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerName string             `protobuf:"bytes,1,opt,name=scanner_name,json=scannerName,proto3" json:"scanner_name,omitempty"`
	Status      ScannerStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=scanner.ScannerStatus" json:"status,omitempty"`                                                                 // Current status: online, busy, etc.
	Timestamp   int64              `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                                      // Unix timestamp in nanoseconds
	Metrics     map[string]float64 `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"` // Optional metrics about scanner health/performance
}

func (x *ScannerHeartbeatEvent) Reset() {
	*x = ScannerHeartbeatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannerHeartbeatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerHeartbeatEvent) ProtoMessage() {}

func (x *ScannerHeartbeatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerHeartbeatEvent.ProtoReflect.Descriptor instead.
func (*ScannerHeartbeatEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{22}
}

func (x *ScannerHeartbeatEvent) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

func (x *ScannerHeartbeatEvent) GetStatus() ScannerStatus {
	if x != nil {
		return x.Status
	}
	return ScannerStatus_SCANNER_STATUS_UNSPECIFIED
}

func (x *ScannerHeartbeatEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ScannerHeartbeatEvent) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// ScannerStatusChangedEvent is emitted when a scanner's status changes.
type ScannerStatusChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerName    string        `protobuf:"bytes,1,opt,name=scanner_name,json=scannerName,proto3" json:"scanner_name,omitempty"`
	NewStatus      ScannerStatus `protobuf:"varint,2,opt,name=new_status,json=newStatus,proto3,enum=scanner.ScannerStatus" json:"new_status,omitempty"` // "online", "offline", "maintenance", "error", "unknown"
	PreviousStatus ScannerStatus `protobuf:"varint,3,opt,name=previous_status,json=previousStatus,proto3,enum=scanner.ScannerStatus" json:"previous_status,omitempty"`
	Reason         string        `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`        // Reason for the status change
	Timestamp      int64         `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in nanoseconds
}

func (x *ScannerStatusChangedEvent) Reset() {
	*x = ScannerStatusChangedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannerStatusChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerStatusChangedEvent) ProtoMessage() {}

func (x *ScannerStatusChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerStatusChangedEvent.ProtoReflect.Descriptor instead.
func (*ScannerStatusChangedEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{23}
}

func (x *ScannerStatusChangedEvent) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

func (x *ScannerStatusChangedEvent) GetNewStatus() ScannerStatus {
	if x != nil {
		return x.NewStatus
	}
	return ScannerStatus_SCANNER_STATUS_UNSPECIFIED
}

func (x *ScannerStatusChangedEvent) GetPreviousStatus() ScannerStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return ScannerStatus_SCANNER_STATUS_UNSPECIFIED
}

func (x *ScannerStatusChangedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ScannerStatusChangedEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ScannerDeregisteredEvent is emitted when a scanner gracefully deregisters
// from the system.
type ScannerDeregisteredEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerName string `protobuf:"bytes,1,opt,name=scanner_name,json=scannerName,proto3" json:"scanner_name,omitempty"`
	Reason      string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Timestamp   int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in nanoseconds
}

func (x *ScannerDeregisteredEvent) Reset() {
	*x = ScannerDeregisteredEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_scanning_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannerDeregisteredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerDeregisteredEvent) ProtoMessage() {}

func (x *ScannerDeregisteredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scanning_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerDeregisteredEvent.ProtoReflect.Descriptor instead.
func (*ScannerDeregisteredEvent) Descriptor() ([]byte, []int) {
	return file_proto_scanning_proto_rawDescGZIP(), []int{24}
}

func (x *ScannerDeregisteredEvent) GetScannerName() string {
	if x != nil {
		return x.ScannerName
	}
	return ""
}

func (x *ScannerDeregisteredEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ScannerDeregisteredEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_proto_scanning_proto protoreflect.FileDescriptor

var file_proto_scanning_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x99, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x66, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x66,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf0, 0x01,
	0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c,
	0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x22, 0x9c, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c,
	0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x7b, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22, 0x74, 0x0a, 0x1c,
	0x4a, 0x6f, 0x62, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x22, 0x69, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x75, 0x73, 0x69, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x9d, 0x01,
	0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x6a, 0x0a,
	0x10, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x6c, 0x0a, 0x12, 0x4a, 0x6f, 0x62,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x22, 0xdc, 0x02, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x69, 0x12, 0x43, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x83, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xca, 0x02, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x77, 0x0a, 0x0f, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0xb1, 0x02, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x33,
	0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x4a, 0x6f,
	0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xa8, 0x03, 0x0a, 0x16, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x02, 0x0a,
	0x15, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x3a,
	0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x01, 0x0a, 0x19, 0x53,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x73, 0x0a, 0x18, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0xbd,
	0x02, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a,
	0x1b, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x41, 0x55, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x41, 0x4e,
	0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x55, 0x53,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x49, 0x4e,
	0x47, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x2a, 0xdc,
	0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02,
	0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x2a, 0xa0, 0x01,
	0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43,
	0x41, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x46, 0x46,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e,
	0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04,
	0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x68, 0x72, 0x61, 0x76, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x2d, 0x61, 0x72,
	0x6d, 0x61, 0x64, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_scanning_proto_rawDescOnce sync.Once
	file_proto_scanning_proto_rawDescData = file_proto_scanning_proto_rawDesc
)

func file_proto_scanning_proto_rawDescGZIP() []byte {
	file_proto_scanning_proto_rawDescOnce.Do(func() {
		file_proto_scanning_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_scanning_proto_rawDescData)
	})
	return file_proto_scanning_proto_rawDescData
}

var file_proto_scanning_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_scanning_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_scanning_proto_goTypes = []interface{}{
	(ScanJobStatus)(0),                   // 0: scanner.ScanJobStatus
	(TaskStatus)(0),                      // 1: scanner.TaskStatus
	(ScannerStatus)(0),                   // 2: scanner.ScannerStatus
	(*ScanResult)(nil),                   // 3: scanner.ScanResult
	(*Finding)(nil),                      // 4: scanner.Finding
	(*JobRequestedEvent)(nil),            // 5: scanner.JobRequestedEvent
	(*JobCreatedEvent)(nil),              // 6: scanner.JobCreatedEvent
	(*JobEnumerationCompletedEvent)(nil), // 7: scanner.JobEnumerationCompletedEvent
	(*JobPausingEvent)(nil),              // 8: scanner.JobPausingEvent
	(*JobPausedEvent)(nil),               // 9: scanner.JobPausedEvent
	(*JobResumingEvent)(nil),             // 10: scanner.JobResumingEvent
	(*JobCancellingEvent)(nil),           // 11: scanner.JobCancellingEvent
	(*JobCancelledEvent)(nil),            // 12: scanner.JobCancelledEvent
	(*TaskCreatedEvent)(nil),             // 13: scanner.TaskCreatedEvent
	(*TaskStartedEvent)(nil),             // 14: scanner.TaskStartedEvent
	(*TaskProgressedEvent)(nil),          // 15: scanner.TaskProgressedEvent
	(*Checkpoint)(nil),                   // 16: scanner.Checkpoint
	(*TaskCompletedEvent)(nil),           // 17: scanner.TaskCompletedEvent
	(*TaskFailedEvent)(nil),              // 18: scanner.TaskFailedEvent
	(*TaskHeartbeatEvent)(nil),           // 19: scanner.TaskHeartbeatEvent
	(*TaskResumeEvent)(nil),              // 20: scanner.TaskResumeEvent
	(*TaskJobMetricEvent)(nil),           // 21: scanner.TaskJobMetricEvent
	(*TaskPausedEvent)(nil),              // 22: scanner.TaskPausedEvent
	(*TaskCancelledEvent)(nil),           // 23: scanner.TaskCancelledEvent
	(*ScannerRegisteredEvent)(nil),       // 24: scanner.ScannerRegisteredEvent
	(*ScannerHeartbeatEvent)(nil),        // 25: scanner.ScannerHeartbeatEvent
	(*ScannerStatusChangedEvent)(nil),    // 26: scanner.ScannerStatusChangedEvent
	(*ScannerDeregisteredEvent)(nil),     // 27: scanner.ScannerDeregisteredEvent
	nil,                                  // 28: scanner.TaskCreatedEvent.MetadataEntry
	nil,                                  // 29: scanner.Checkpoint.MetadataEntry
	nil,                                  // 30: scanner.ScannerRegisteredEvent.TagsEntry
	nil,                                  // 31: scanner.ScannerHeartbeatEvent.MetricsEntry
	(*structpb.Struct)(nil),              // 32: google.protobuf.Struct
	(*TargetSpec)(nil),                   // 33: shared.TargetSpec
	(SourceType)(0),                      // 34: shared.SourceType
	(*Auth)(nil),                         // 35: shared.Auth
}
var file_proto_scanning_proto_depIdxs = []int32{
	4,  // 0: scanner.ScanResult.findings:type_name -> scanner.Finding
	0,  // 1: scanner.ScanResult.status:type_name -> scanner.ScanJobStatus
	32, // 2: scanner.Finding.raw_finding:type_name -> google.protobuf.Struct
	33, // 3: scanner.JobRequestedEvent.targets:type_name -> shared.TargetSpec
	33, // 4: scanner.JobCreatedEvent.target_spec:type_name -> shared.TargetSpec
	34, // 5: scanner.TaskCreatedEvent.source_type:type_name -> shared.SourceType
	28, // 6: scanner.TaskCreatedEvent.metadata:type_name -> scanner.TaskCreatedEvent.MetadataEntry
	35, // 7: scanner.TaskCreatedEvent.auth:type_name -> shared.Auth
	16, // 8: scanner.TaskProgressedEvent.checkpoint:type_name -> scanner.Checkpoint
	29, // 9: scanner.Checkpoint.metadata:type_name -> scanner.Checkpoint.MetadataEntry
	34, // 10: scanner.TaskResumeEvent.source_type:type_name -> shared.SourceType
	16, // 11: scanner.TaskResumeEvent.checkpoint:type_name -> scanner.Checkpoint
	35, // 12: scanner.TaskResumeEvent.auth:type_name -> shared.Auth
	1,  // 13: scanner.TaskJobMetricEvent.status:type_name -> scanner.TaskStatus
	15, // 14: scanner.TaskPausedEvent.progress:type_name -> scanner.TaskProgressedEvent
	30, // 15: scanner.ScannerRegisteredEvent.tags:type_name -> scanner.ScannerRegisteredEvent.TagsEntry
	2,  // 16: scanner.ScannerRegisteredEvent.initial_status:type_name -> scanner.ScannerStatus
	2,  // 17: scanner.ScannerHeartbeatEvent.status:type_name -> scanner.ScannerStatus
	31, // 18: scanner.ScannerHeartbeatEvent.metrics:type_name -> scanner.ScannerHeartbeatEvent.MetricsEntry
	2,  // 19: scanner.ScannerStatusChangedEvent.new_status:type_name -> scanner.ScannerStatus
	2,  // 20: scanner.ScannerStatusChangedEvent.previous_status:type_name -> scanner.ScannerStatus
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_scanning_proto_init() }
func file_proto_scanning_proto_init() {
	if File_proto_scanning_proto != nil {
		return
	}
	file_proto_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_scanning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRequestedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEnumerationCompletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPausingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPausedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResumingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCancellingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCancelledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskProgressedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCompletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskFailedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskHeartbeatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResumeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskJobMetricEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPausedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCancelledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannerRegisteredEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannerHeartbeatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannerStatusChangedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_scanning_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannerDeregisteredEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_scanning_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_scanning_proto_goTypes,
		DependencyIndexes: file_proto_scanning_proto_depIdxs,
		EnumInfos:         file_proto_scanning_proto_enumTypes,
		MessageInfos:      file_proto_scanning_proto_msgTypes,
	}.Build()
	File_proto_scanning_proto = out.File
	file_proto_scanning_proto_rawDesc = nil
	file_proto_scanning_proto_goTypes = nil
	file_proto_scanning_proto_depIdxs = nil
}
