apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: secret-scanner
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:11.3.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"  # Change this in production
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: secret-scanner
  labels:
    app: grafana
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: http
    name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: secret-scanner
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true
    - name: Tempo
      type: tempo
      url: http://tempo:3200
      access: proxy
      jsonData:
        httpMethod: GET
        serviceMap:
          datasourceUid: prometheus
