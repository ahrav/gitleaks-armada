apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-worker
  namespace: secret-scanner
  labels:
    app: scanner-worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app: scanner-worker
  template:
    metadata:
      labels:
        app: scanner-worker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8081"
    spec:
      containers:
      - name: scanner
        image: scanner:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 8081
          name: metrics
        env:
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_BROKERS
        - name: KAFKA_TASK_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_TASK_TOPIC
        - name: KAFKA_RESULTS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_RESULTS_TOPIC
        - name: KAFKA_GROUP_ID
          value: "scanner-group"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          httpGet:
            path: /v1/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z kafka 9092; do echo waiting for kafka; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: scanner-worker
  namespace: secret-scanner
  labels:
    app: scanner-worker
spec:
  type: ClusterIP
  selector:
    app: scanner-worker
  ports:
  - port: 8080
    targetPort: health
    name: health
  - port: 8081
    targetPort: metrics
    name: metrics
