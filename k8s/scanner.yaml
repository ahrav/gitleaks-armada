apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner
  namespace: secret-scanner
  labels:
    app: scanner
spec:
  replicas: 5
  selector:
    matchLabels:
      app: scanner
  template:
    metadata:
      labels:
        app: scanner
    spec:
      containers:
      - name: scanner
        image: scanner:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: health
        env:
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_BROKERS
        - name: KAFKA_ENUMERATION_TASK_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_ENUMERATION_TASK_TOPIC
        - name: KAFKA_SCANNING_TASK_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_SCANNING_TASK_TOPIC
        - name: KAFKA_RESULTS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_RESULTS_TOPIC
        - name: KAFKA_RULES_REQUEST_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_RULES_REQUEST_TOPIC
        - name: KAFKA_RULES_RESPONSE_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_RULES_RESPONSE_TOPIC
        - name: KAFKA_GROUP_ID
          value: "scanner"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # OpenTelemetry Configuration
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: OTEL_EXPORTER_OTLP_ENDPOINT
        - name: OTEL_SERVICE_NAME
          value: "scanner-worker"
        - name: OTEL_SAMPLING_RATIO
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: OTEL_SAMPLING_RATIO
        - name: KAFKA_HIGH_PRIORITY_TASK_TOPIC
          valueFrom:
            configMapKeyRef:
              name: scanner-config
              key: KAFKA_HIGH_PRIORITY_TASK_TOPIC
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          httpGet:
            path: /v1/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z kafka 9092; do echo waiting for kafka; sleep 2; done;']
      - name: wait-for-otel
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z otel-collector 4317; do echo "waiting for otel-collector"; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: scanner-worker
  namespace: secret-scanner
  labels:
    app: scanner-worker
spec:
  type: ClusterIP
  selector:
    app: scanner-worker
  ports:
  - port: 8080
    targetPort: health
    name: health
